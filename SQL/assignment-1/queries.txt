1: Insert a new record in your Orders table. 

INSERT INTO orders Values
(1001,4567,103,'2021-07-01',767),
(1002,4568,104,'2022-02-15',768);



2: Add Primary key constraint for SalesmanId column in Salesman table. Add default constraint for City column in Salesman table. Add Foreign key constraint for SalesmanId column in Customer table. Add not null constraint in Customer_name column for the Customer table.

-- Add Primary key constraint for SalesmanId column in Salesman table.
alter table salesman add primary key(salesmanId);

-- Add default constraint for City column in Salesman table. 
alter table Salesman
alter city set default 'kanpur';

-- Add Foreign key constraint for SalesmanId column in Customer table.
alter table customer add foreign key(salesmanId) references salesman(salesmanId);

-- Add not null constraint in Customer_name column for the Customer table.
alter table customer 
modify column customername varchar(255) not null;



3: Fetch the data where the Customer’s name is ending with ‘N’ also get the purchase amount value greater than 500.

SELECT * FROM `customer` where customername LIKE '%N' and purchaseAmount<500;



4: Using SET operators, retrieve the first result with unique SalesmanId values from two tables, and the other result containing SalesmanId with duplicates from two tables.

-- first result with unique SalesmanId values from two tables.
select * from customer union select * from customer1;

-- other result containing SalesmanId with duplicates from two tables.
select * from customer union all select * from customer1;

5: Display the below columns which has the matching data. Orderdate, Salesman Name, Customer Name, Commission, and City which has the range of Purchase Amount between 500 to 1500.

select s.salesmanname, c.customername, s.commission, s.city, o.orderdate from salesman as s inner join customer as c on s.salesmanid=c.salesmanid inner join orders as o on o.salesmanid=s.salesmanid where 500<c.purchaseamount<1500;



6: Using right join fetch all the results from Salesman and Orders table.

select * from salesman as s right join orders as o on s.salesmanid = o.salesmanid;



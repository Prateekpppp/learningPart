Simple Queries:
--------------
--------------


1. List all the employee details.
--------

select * from employee;

2. List all the department details.
--------

select * from department;


3. List all job details.
--------

select * from job;


4. List all the locations.
--------

select * from location;


5. List out the First Name, Last Name, Salary, Commission for all Employees.
--------

select FIRST_NAME,LAST_NAME,SALARY,COMM from employee;


6. List out the Employee ID, Last Name, Department ID for all employees and alias Employee ID as "ID of the Employee", Last Name as "Name of the Employee", Department ID as "Dep_id".
--------

select EMPLOYEE_ID as 'ID of the Employee', LAST_NAME as 'Name of the Employee', DEPARTMENT_ID as Dep_id from employee;


7. List out the annual salary of the employees with their names only.
--------

select concat(FIRST_NAME, ' ',MIDDLE_NAME, ' ', LAST_NAME) AS 'Employee Name', SALARY*12 as 'Annual Salary' from employee;


----------------------------------------------------------------------------
----------------------------------------------------------------------------


WHERE Condition:
----------------


1. List the details about "Smith".
--------

select * from employee where FIRST_NAME='Smith' or LAST_NAME='Smith';


2. List out the employees who are working in department 20.
--------

select * from employee where DEPARTMENT_ID=20;


3. List out the employees who are earning salary between 2000 and 3000.
--------

select * from employee where SALARY between 2000 and 3000;


4. List out the employees who are working in department 10 or 20.
--------

select * from employee where DEPARTMENT_ID=10 or DEPARTMENT_ID=20;


5. Find out the employees who are not working in department 10 or 30.
--------

select * from employee where DEPARTMENT_ID!=10 and DEPARTMENT_ID!=30;
                          OR
select * from employee where DEPARTMENT_ID not in (10,30);


6. List out the employees whose name starts with 'L'.
--------

select * from employee where FIRST_NAME like 'L%';


7. List out the employees whose name starts with 'L' and ends with 'E'.
--------

select * from employee where FIRST_NAME like 'L%' and LAST_NAME like '%E';


8. List out the employees whose name length is 4 and start with 'J'.
--------

select * from employee where len(FIRST_NAME)=4 and FIRST_NAME like 'J%';
                         OR
select * from employee where FIRST_NAME like 'J%' and FIRST_NAME like 'J___';


9. List out the employees who are working in department 30 and draw the salaries more than 2500.
--------

select * from employee where DEPARTMENT_ID=30 and Salary>2500;


10. List out the employees who are not receiving commission.
--------

select * from employee where COMM is null;




ORDER BY Clause:
----------------
----------------


1. List out the Employee ID and Last Name in ascending order based on the Employee ID.
----------

select EMPLOYEE_ID, LAST_NAME from employee order by EMPLOYEE_ID asc;


2. List out the Employee ID and Name in descending order based on salary.
----------

select EMPLOYEE_ID, concat(FIRST_NAME, ' ',MIDDLE_NAME, ' ', LAST_NAME) AS 'Employee Name' from employee order by SALARY desc;


3. List out the employee details according to their Last Name in ascending-order.
----------

select * from employee order by LAST_NAME asc;


4. List out the employee details according to their Last Name in ascending order and then Department ID in descending order.
----------

select * from employee order by LAST_NAME asc, DEPARTMENT_ID desc;




GROUP BY and HAVING Clause:
---------------------------
---------------------------


1. List out the department wise maximum salary, minimum salary and average salary of the employees.
----------

select DEPARTMENT_ID, max(SALARY) as max_salary, min(SALARY) as min__salary, avg(SALARY) as avg__salary from employee group by DEPARTMENT_ID;


2. List out the job wise maximum salary, minimum salary and average salary of the employees.
----------

select JOB_ID, max(SALARY) as max_salary, min(SALARY) as min__salary, avg(SALARY) as avg__salary from employee group by JOB_ID;


3. List out the number of employees who joined each month in ascending order.
----------

select month(HIRE_DATE) as Month_No, count(1) as 'No. of Employee Hired' from employee group by month(HIRE_DATE) order by month(HIRE_DATE);


4. List out the number of employees for each month and year in ascending order based on the year and month.
----------

select year(HIRE_DATE) as Year_No,month(HIRE_DATE) as Month_No, count(1) as 'No. of Employee Hired' from employee group by year(HIRE_DATE),month(HIRE_DATE) order by year(HIRE_DATE),month(HIRE_DATE);


5. List out the Department ID having at least four employees.
----------

select DEPARTMENT_ID, count(1) as 'No. of Employee' from employee group by DEPARTMENT_ID having count(1)>=4;


6. How many employees joined in February month.
----------

select month(HIRE_DATE) as Month_No, count(1) as 'No. of Employee Hired' from employee where month(HIRE_DATE)=2 group by month(HIRE_DATE);


7. How many employees joined in May or June month.
----------

select month(HIRE_DATE) as Month_No, count(1) as 'No. of Employee Hired' from employee where month(HIRE_DATE) between 5 and 6 group by month(HIRE_DATE);


8. How many employees joined in 1985?
----------

select year(HIRE_DATE) as Year_No, count(1) as 'No. of Employee Hired' from employee where year(HIRE_DATE)=1985 group by year(HIRE_DATE);


9. How many employees joined each month in 1985?
----------

select month(HIRE_DATE) as Month_No, count(1) as 'No. of Employee Hired' from employee where year(HIRE_DATE)=1985 group by month(HIRE_DATE);


10. How many employees were joined in April 1985?
----------

select count(1) as 'No. of Employee Hired' from employee where month(HIRE_DATE)=4 and year(HIRE_DATE)=1985;


11. Which is the Department ID having greater than or equal to 3 employees joining in April 1985?
----------

select DEPARTMENT_ID, count(1) as 'No. of Employee' from employee where month(HIRE_DATE)=4 and year(HIRE_DATE)=1985 group by DEPARTMENT_ID having count(1)>=3;




Joins:
------
------


1. List out employees with their department names.
----------

select EMPLOYEE_ID,e.DEPARTMENT_ID,d.Name from employee e 
left join department d on e.DEPARTMENT_ID=d.DEPARTMENT_ID;


2. Display employees with their designations.
----------

select EMPLOYEE_ID,e.JOB_ID,j.Designation from employee e 
left join job j on e.JOB_ID=j.JOB_ID;


3. Display the employees with their department names and city.
----------

select EMPLOYEE_ID,e.DEPARTMENT_ID,d.Name,l.City from employee e 
left join department d on e.DEPARTMENT_ID=d.DEPARTMENT_ID 
left join location l on d.Location_Id=l.Location_ID; 


4. How many employees are working in different departments? Display with department names.
----------

SELECT d.Name, COUNT(*) AS Employee_Count FROM employee e
JOIN department d ON e.Department_ID = d.Department_ID
group by d.Name;



5. How many employees are working in the sales department?
----------

SELECT count(*) AS Employee_Count FROM employee e
JOIN department d ON e.Department_ID = d.Department_ID
where d.Name = 'Sales';


6. Which is the department having greater than or equal to 3 employees and display the department names in ascending order.
----------

select Name, count(*) AS Employee_Count FROM employee e
JOIN department d ON e.Department_ID = d.Department_ID
group by Name
having Employee_Count>3
order by Employee_Count asc;



7. How many employees are working in 'Dallas'?
----------

select count(*) from employee e 
left join department d on e.DEPARTMENT_ID=d.DEPARTMENT_ID 
left join location l on d.Location_Id=l.Location_ID
where l.City='Dallas';


8. Display all employees in sales or operation departments.
----------

select EMPLOYEE_ID,e.DEPARTMENT_ID,d.Name from employee e 
left join department d on e.DEPARTMENT_ID=d.DEPARTMENT_ID
where d.Name='Sales' or d.Name='Operations';





CONDITIONAL STATEMENT:
---------------------
---------------------


1. Display the employee details with salary grades. Use conditional statement to create a grade column.
----------

select EMPLOYEE_ID, SALARY,
case 
when SALARY between 0 and 1000 then 'grade 1'
when SALARY between 1000 and 2000 then 'grade 2'
when SALARY between 2000 and 3000 then 'grade 3'
else 'grade 4'
end
as grade from employee;




2. List out the number of employees grade wise. Use conditional statement to create a grade column.
----------

select
case 
when SALARY between 0 and 1000 then 'grade 1'
when SALARY between 1000 and 2000 then 'grade 2'
when SALARY between 2000 and 3000 then 'grade 3'
else 'grade 4'
end
as grade, count(*) from employee
group by grade;


3. Display the employee salary grades and the number of employees between 2000 to 5000 range of salary.
----------

select grade, count(*) from (
select 
    case 
	when SALARY between 0 and 1000 then 'grade 1'
	when SALARY between 1000 and 2000 then 'grade 2'
	when SALARY between 2000 and 5000 then 'grade 3'
	else 'grade 4'
    end
    as grade
    from employee
    where SALARY between 2000 and 5000
) as salary_gradeing
group by grade;






Subqueries:
----------
----------

1. Display the employees list who got the maximum salary.
----------

select * from employee 
where SALARY in (select max(SALARY) from employee);



2. Display the employees who are working in the sales department.
----------

select EMPLOYEE_ID from employee
where DEPARTMENT_ID in (
    select DEPARTMENT_ID from department
    where Name='Sales' 
);


3. Display the employees who are working as 'Clerk'.
----------

select EMPLOYEE_ID from employee
where JOB_ID in (
    select JOB_ID from job
    where Designation='CLERK'
);


4. Display the list of employees who are living in 'Boston'.
----------

select EMPLOYEE_ID from employee
where Department_ID in (
    select Department_ID from department
    where Location_ID in (
        select Location_ID from location where City='Boston'
    )
);


5. Find out the number of employees working in the sales department.
----------

select count(*) from employee
where DEPARTMENT_ID in (
    select DEPARTMENT_ID from department
    where Name='Sales' 
);


6. Update the salaries of employees who are working as clerks on the basis of10%.
----------

update employee set SALARY = SALARY+SALARY*0.1
where JOB_ID in (
    select JOB_ID from job
    where Designation='CLERK'
);


7. Display the second highest salary drawing employee details.
----------

select max(SALARY) from employee
where SALARY not in (
    select max(SALARY) from employee
);


8. List out the employees who earn more than every employee in department 30.
----------

select EMPLOYEE_ID from employee
where SALARY in (
    select max(SALARY) from employee 
    where DEPARTMENT_ID=30
);

9. Find out which department has no employees.
----------

select Department_ID from department
where Department_ID not in (select Department_ID from employee);


10. Find out the employees who earn greater than the average salary for their department.
----------

select EMPLOYEE_ID, SALARY,e.Department_Id, da_t.avg_salary from employee e
left join (
    select Department_Id, avg(SALARY) as avg_salary from employee group by Department_Id
) as da_t
on e.Department_ID=da_t.Department_ID
where e.SALARY > da_t.avg_salary;


